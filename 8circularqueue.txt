********************************************************
Name    : Jebin Shaju
Class   : CSE B
Semester: s3
Roll No : 33
********************************************************

********************************************************
        NPROGRAM : CIRCULAR QUEUE OPERATIONS
********************************************************

#include<stdio.h>
#include<stdlib.h>

int rear=-1,front=-1,size=3,queue[20];

int enqueue()
{
	int item;
	if((rear+1)%size== front)
	{
		printf("The Circularqueue is full !!!.\n");
	}
	else if(front==-1 && rear==-1)
	{
		printf("\nEnter the item to be Enqueued: ");
		scanf("%d",&item);
		front=0;
		rear=0;
		queue[rear]=item;
		printf("Sucessfully inserted.\n");
	}
	else
	{
		printf("\nEnter the item to be Enqueued: ");
		scanf("%d",&item);
		rear=(rear+1)%size;
		queue[rear]=item;
		printf("Sucessfully inserted.\n");
	}
}

int dequeue()
{
	if(front==-1 && rear==-1)
	{
		printf("The Circularqueue is empty!!!.");
	}
	else if(rear==front)
	{
		printf("The dequeued item is %d",queue[front]);
		front=-1;
		rear=-1;
	}
	else
	{
		printf("The dequeued item is %d\n",queue[front]);
		front=(front+1)%size;
	}
}

int display()
{
	int i;
	if(front==-1 && rear==-1)
	{
		printf("CircularQueue is empty.\n");
	}
	else
	{
		if(front<=rear)
		{
			printf("Elements are: ");
			for(i=front;i<=rear;i++)
			{
				printf("--> %d \n",queue[i]);
			}
		}
		else
		{
			printf("Elements are: ");
			for(i=front;i<size;i++)
			{
				printf("--> %d \n",queue[i]);
			}
			for(i=0;i<=rear;i++)
			{
				printf("--> %d \n",queue[i]);
			}
		}
	}
}

int main()
{
		int op,item;
		printf("Circular Queue operations.\n");
		printf("Enter the size :: ");
		scanf("%d",&size);
		while(1)
		{
			printf("\n<<<<< 1.Enqueue === 2.Dequeue === 3.display === 4.exit >>>>> \nEnter your option:: ");
			scanf("%d",&op);
			switch(op)
			{
				case 1:
					
					enqueue();
					break;
			
				case 2:
					dequeue();
					break;
			
				case 3:
					display();
					break;
				
				case 4:
					printf("Exiting>>>\n");
					exit(1);
				
				default:
					printf("Enter a valid option.");
				
			}
		}
}


********************************************************
                        OUTPUT
********************************************************

Circular Queue operations.
Enter the size :: 4

<<<<< 1.Enqueue === 2.Dequeue === 3.display === 4.exit >>>>> 
Enter your option:: 1

Enter the item to be Enqueued: 12
Sucessfully inserted.

<<<<< 1.Enqueue === 2.Dequeue === 3.display === 4.exit >>>>>
Enter your option:: 1

Enter the item to be Enqueued: 34
Sucessfully inserted.

<<<<< 1.Enqueue === 2.Dequeue === 3.display === 4.exit >>>>>
Enter your option:: 1

Enter the item to be Enqueued: 34
Sucessfully inserted.

<<<<< 1.Enqueue === 2.Dequeue === 3.display === 4.exit >>>>>
Enter your option:: 1

Enter the item to be Enqueued: 45
Sucessfully inserted.

<<<<< 1.Enqueue === 2.Dequeue === 3.display === 4.exit >>>>>
Enter your option:: 1
The Circularqueue is full !!!.

<<<<< 1.Enqueue === 2.Dequeue === 3.display === 4.exit >>>>>
Enter your option:: 3
Elements are: --> 12
--> 34
--> 34
--> 45

<<<<< 1.Enqueue === 2.Dequeue === 3.display === 4.exit >>>>>
Enter your option:: 2
The dequeued item is 12

<<<<< 1.Enqueue === 2.Dequeue === 3.display === 4.exit >>>>>
Enter your option:: 2
The dequeued item is 34

<<<<< 1.Enqueue === 2.Dequeue === 3.display === 4.exit >>>>>
Enter your option:: 3
Elements are: --> 34
--> 45

<<<<< 1.Enqueue === 2.Dequeue === 3.display === 4.exit >>>>>
Enter your option:: 2
The dequeued item is 34

<<<<< 1.Enqueue === 2.Dequeue === 3.display === 4.exit >>>>>
Enter your option:: 2
The dequeued item is 45
<<<<< 1.Enqueue === 2.Dequeue === 3.display === 4.exit >>>>>
Enter your option:: 2
The Circularqueue is empty!!!.
<<<<< 1.Enqueue === 2.Dequeue === 3.display === 4.exit >>>>>
Enter your option:: 3
CircularQueue is empty.

<<<<< 1.Enqueue === 2.Dequeue === 3.display === 4.exit >>>>>
Enter your option:: 4
Exiting>>>